

================================================================
== Vitis HLS Report for 'rotate_right'
================================================================
* Date:           Sun Mar 17 18:43:13 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        compress
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.00 ns|  1.739 ns|     0.81 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|        1|  3.003 ns|  3.003 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.78>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%n_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %n"   --->   Operation 3 'read' 'n_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%n_cast = zext i5 %n_read"   --->   Operation 4 'zext' 'n_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.78ns)   --->   "%sub_ln12 = sub i6 32, i6 %n_cast" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 5 'sub' 'sub_ln12' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 6 [1/1] (0.00ns)   --->   "%x_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %x"   --->   Operation 6 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%n_cast1 = zext i5 %n_read"   --->   Operation 7 'zext' 'n_cast1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (1.38ns)   --->   "%lshr_ln12 = lshr i32 %x_read, i32 %n_cast1" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 8 'lshr' 'lshr_ln12' <Predicate = true> <Delay = 1.38> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i6 %sub_ln12" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 9 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (1.38ns)   --->   "%shl_ln12 = shl i32 %x_read, i32 %zext_ln12" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 10 'shl' 'shl_ln12' <Predicate = true> <Delay = 1.38> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.35ns)   --->   "%or_ln12 = or i32 %shl_ln12, i32 %lshr_ln12" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 11 'or' 'or_ln12' <Predicate = true> <Delay = 0.35> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%ret_ln12 = ret i32 %or_ln12" [C:/hls_projects/compress/compress.cpp:12]   --->   Operation 12 'ret' 'ret_ln12' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.003ns, clock uncertainty: 0.811ns.

 <State 1>: 0.781ns
The critical path consists of the following:
	wire read operation ('n') on port 'n' [3]  (0.000 ns)
	'sub' operation 6 bit ('sub_ln12', C:/hls_projects/compress/compress.cpp:12) [8]  (0.781 ns)

 <State 2>: 1.739ns
The critical path consists of the following:
	wire read operation ('x') on port 'x' [4]  (0.000 ns)
	'lshr' operation 32 bit ('lshr_ln12', C:/hls_projects/compress/compress.cpp:12) [7]  (1.388 ns)
	'or' operation 32 bit ('or_ln12', C:/hls_projects/compress/compress.cpp:12) [11]  (0.351 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
